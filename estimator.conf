estimator {

	directoryReports = "/path/to/reports-dir/"
	directoryCaches  = "/path/to/cache-dir/"
	
	dynamicThresholds {
		# true if trained thresholds should be used
		use = true
		# training: minimum accuracy requirement
		minAccuracy = .85
		# training: minimum point share requirement
		minJobShare = .3
	
		# standard threshold if no training data is available
		standardThreshold = .75
	}
	
	
	costFactorWeightFunction = "inverseSqrt"
	filterCostFactorOutliers = true
	
	
	dynamicSimilarityWeights {
		# true if the trained similarity weights should be used
		use = true
	}
	finalSimilarityExponent {
		# parameter b for the transformation of the final similarity value
		general = 30
	}
	
	individualSimilarityExponent = 1 
	
	# the number of times that thresholds are lowered if no similar jobs are found
	lowerThresholdTimes = 6
	# the factor by which thresholds are lowered
	lowerThresholdFactor = 0.90
	
	# the limit on the similar executions set
	maxSimilarJobs = 5
	# similarities with a value greater than this are considered "very high"
	veryHighSimilarity = 0.9
 
	similarityQualityAccuracyDelta = true

	trainingData {
		# BELL: train with runtimes of the same iteration only
		sameIterationOnly = true
		# BELL: train with executions of the same input dataset only
		sameDatasetOnly = false
		
	}
	# create individual simulation report if a suite is executed
	simulationSuiteCreateIndividualReports = false
	
	# the name of the job history
	jobHistory = "Thesis"
}

db {
	user=""
	pass=""
	
	# the jdbc url if a single database is used
	url="jdbc:h2:/path/to/mydb2"
	
	
	union {
		# the urls if a union database is used (see class UnionJobHistory)
		# this can contain folders, in which case all db files in that folder are loaded.
		urls=[
		"/path/to/db-dir/"
		]
		user=""
		pass=""
	}
}